{"version":3,"sources":["components/nav/index.jsx","components/searchBox/index.jsx","components/jobCard/index.jsx","components/jobEditCard/index.jsx","components/heartButton/index.jsx","pages/home/index.jsx","pages/searchResult/index.jsx","pages/jobDetail/index.jsx","pages/jobNew/index.jsx","pages/jobEdit/index.jsx","pages/login/index.jsx","pages/register/index.jsx","pages/favorites/index.jsx","reportWebVitals.js","index.js"],"names":["NavBar","useState","username","setUsername","isLoggedIn","setIsLoggedIn","useEffect","axios","defaults","withCredentials","get","then","response","console","log","data","catch","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","href","Toggle","Collapse","id","Nav","className","Link","onClick","window","location","reload","Fragment","NavDropdown","title","Item","Button","style","marginLeft","SearchBox","searchState","setSearchState","Form","FormControl","type","placeholder","value","onChange","e","target","JobCard","props","showAll","jobInfo","editable","showHeartButton","_id","company","descrption","email","website","postingDate","date","Date","Card","borderRadius","border","Body","Title","HeartButton","jobId","Subtitle","Text","getFullYear","getMonth","getDate","marginTop","marginRight","delete","error","JobEditCard","action","job","isNew","postUser","setJobInfo","titleValidate","setTitleValidate","companyValidate","setCompanyValidate","locationValidate","setLocationValidate","descrptionValidate","setDescrptionValidate","emailValidate","setEmailValidate","key","newJobInfo","padding","noValidate","onSubmit","event","preventDefault","stopPropagation","valid","trim","length","handleSubmit","Group","controlId","Label","Control","isInvalid","equired","Feedback","validated","required","as","rows","undefined","favoriteState","setFavoriteState","post","xmlns","width","height","fill","class","viewBox","d","HomePage","SearchResultPage","searchQuery","useParams","searchResultState","setSearchResultState","map","item","JobDetail","JobNew","jobData","JobEdit","isLoading","setIsLoading","put","LoginPage","password","userInfo","setUserInfo","usernameErrorMessage","setUsernameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","newUserInfo","RegisterPage","passwordRetypeErrorMessage","setPasswordRetypeErrorMessage","passwordRetype","FavoritesPage","favoritesState","setfavoritesState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.c1b6e2bf.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Navbar, Container, Nav, Button, NavDropdown } from 'react-bootstrap';\nimport './index.css';\n\nexport default function NavBar() {\n\n    const [username, setUsername] = useState(\"\");\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        axios.defaults.withCredentials = true;\n        axios.get('/users/whoIsLoggedIn/')\n            .then(response => {\n                console.log(response.data);\n                setUsername(response.data);\n                setIsLoggedIn(true);\n            })\n            .catch(() => setIsLoggedIn(false));\n    }, \"\");\n\n\n    return <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Container>\n            <Navbar.Brand href=\"/\">Job Board</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"me-auto\">\n                </Nav>\n                <Nav>\n                    {isLoggedIn ?\n                        <Nav.Link onClick={() => {\n                            axios.get('/users/logout')\n                                .then(() => {\n                                    setUsername(\"\");\n                                    setIsLoggedIn(false);\n                                    window.location.reload();\n                                })\n                                .catch(() => setIsLoggedIn(false));\n                        }}>Log out</Nav.Link>\n                        : <React.Fragment>\n                            <Nav.Link href=\"/login\">Login</Nav.Link>\n                            <Nav.Link href=\"/register\">Register</Nav.Link>\n                        </React.Fragment>\n                    }\n                    {\n                        isLoggedIn && <Navbar.Collapse id=\"navbar-example\">\n                            <Nav>\n                                <NavDropdown\n                                    id=\"nav-dropdown-example\"\n                                    title={username}\n                                >\n                                    <NavDropdown.Item onClick={() => window.location.href = \"../favorites\"}>favorites</NavDropdown.Item>\n                                </NavDropdown>\n                            </Nav>\n                        </Navbar.Collapse>\n                    }\n                    {\n                        isLoggedIn && <Button variant=\"danger\" style={{ marginLeft: \"20px\" }} onClick={() => { window.location.href = \"../new\" }}>Post Job</Button>\n                    }\n                </Nav>\n            </Navbar.Collapse>\n        </Container>\n    </Navbar>\n}","import React, { useState } from 'react';\nimport { Form, FormControl, Button } from 'react-bootstrap';\n\nexport default function SearchBox() {\n\n    const [searchState, setSearchState] = useState(\"\");\n    return <Form className=\"d-flex\">\n        <FormControl\n            type=\"search\"\n            placeholder=\"Search\"\n            className=\"me-2\"\n            aria-label=\"Search\"\n            value={searchState}\n            onChange={(e) => {setSearchState(e.target.value);}}\n        />\n        <Button variant=\"outline-secondary\" onClick={() => {window.location.href=\"/jobSearch/\" + searchState}}>Search</Button>\n    </Form>\n}","import axios from 'axios';\nimport React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { HeartButton } from '../../components';\n\nimport './index.css';\n\nexport default function JobCard(props) {\n    const { showAll, jobInfo, isLoggedIn, editable, showHeartButton } = props;\n    const { _id, title, company, location, descrption, email, website, postingDate } = jobInfo;\n    const date = new Date(postingDate);\n    return <Card style={{ borderRadius: \"10px\", border: \"1.5px solid #055160\" }}>\n        <Card.Body>\n            <Card.Title onClick={() => { if (!showAll) window.location.href = \"../detail/\" + _id }}>\n                <span>{title}</span>\n                {(showHeartButton && !!_id) && <HeartButton jobId={_id} isLoggedIn={isLoggedIn} />}\n            </Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">{location}</Card.Subtitle>\n            <Card.Subtitle>{company}</Card.Subtitle>\n            {\n                showAll && <React.Fragment>\n                    <Card.Text className=\"card-descrption\">\n                        {descrption}\n                    </Card.Text>\n                    <Card.Text>\n                        <a href={\"mailto:\" + email}>Email</a>\n                    </Card.Text>\n                    {website && <Card.Text>\n                        {company}\n                    </Card.Text>}\n                    <Card.Subtitle className=\"mb-2 text-muted\">{\"Posted on \" + date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDate()}</Card.Subtitle>\n                    {editable && <div style={{ marginTop: \"20px\" }}>\n                        <Button variant=\"secondary\" type=\"submit\" style={{ marginRight: \"10px\" }} onClick={() => window.location.href = \"../edit/\" + _id}>\n                            Edit\n                        </Button>\n                        <Button variant=\"danger\" type=\"submit\" onClick={() => {\n                            axios.delete('/jobs/delete/' + _id)\n                                .then(() => {\n                                    window.location.href = \"/\";\n                                })\n                                .catch(error => console.log(error));\n                        }}>\n                            Delete\n                        </Button>\n                    </ div>\n                    }\n                </React.Fragment>\n            }\n        </Card.Body>\n    </Card >\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, Form, Button } from 'react-bootstrap';\n\nimport './index.css';\n\nexport default function JobEditCard(props) {\n    const { action, job, isNew } = props;\n    const [jobInfo, setJobInfo] = useState(job == null ? {\n        title: \"\",\n        company: \"\",\n        location: \"\",\n        descrption: \"\",\n        email: \"\",\n        website: \"\",\n        postUser: \"\",\n    } : {...job});\n    const [titleValidate, setTitleValidate] = useState(true);\n    const [companyValidate, setCompanyValidate] = useState(true);\n    const [locationValidate, setLocationValidate] = useState(true);\n    const [descrptionValidate, setDescrptionValidate] = useState(true);\n    const [emailValidate, setEmailValidate] = useState(true);\n\n    useEffect(() => {\n        axios.defaults.withCredentials = true;\n        axios.get('/users/whoIsLoggedIn/')\n            .then(response => {\n                onChange(\"postUser\", response.data);\n            })\n    }, \"\");\n\n    function onChange(key, value) {\n        let newJobInfo = { ...jobInfo };\n        newJobInfo[key] = value;\n        setJobInfo(newJobInfo);\n        setTitleValidate(true);\n        setCompanyValidate(true);\n        setLocationValidate(true);\n        setDescrptionValidate(true);\n        setEmailValidate(true);\n    };\n\n    const handleSubmit = (event, data) => {\n        event.preventDefault();\n        event.stopPropagation();\n        const { title, company, location, descrption, email } = data;\n        let valid = true;\n        if (title.trim().length === 0) {\n            setTitleValidate(false);\n            valid = false;\n        }\n        if (company.trim().length === 0) {\n            setCompanyValidate(false);\n            valid = false;\n        }\n        if (location.trim().length === 0) {\n            setLocationValidate(false);\n            valid = false;\n        }\n        if (descrption.trim().length === 0) {\n            setDescrptionValidate(false);\n            valid = false;\n        }\n        if (email.trim().length === 0) {\n            setEmailValidate(false);\n            valid = false;\n        }\n        if (valid) {\n            action(data);\n        }\n    };\n\n    return <Card style={{ borderRadius: \"10px\", border: \"1.5px solid #055160\", padding: \"30px\" }}>\n        <Form noValidate onSubmit={(e) => handleSubmit(e, jobInfo)}>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>Job Title</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Job Title\" value={jobInfo.title} onChange={(e) => onChange(\"title\", e.target.value)} isInvalid={!titleValidate} equired />\n                <Form.Control.Feedback type=\"invalid\" validated={titleValidate}>\n                    Please input job title\n                </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput2\">\n                <Form.Label>Company Name</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Company Name\" value={jobInfo.company} onChange={(e) => onChange(\"company\", e.target.value)} isInvalid={!companyValidate} required />\n                <Form.Control.Feedback type=\"invalid\" validated={false}>\n                    Please input company name\n                </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput3\">\n                <Form.Label>Location</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Location\" value={jobInfo.location} onChange={(e) => onChange(\"location\", e.target.value)} isInvalid={!locationValidate} required />\n                <Form.Control.Feedback type=\"invalid\" validated={false}>\n                    Please input location\n                </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput4\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Email\" value={jobInfo.email} onChange={(e) => onChange(\"email\", e.target.value)} isInvalid={!emailValidate} required />\n                <Form.Control.Feedback type=\"invalid\" validated={false}>\n                    Please input email\n                </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput5\">\n                <Form.Label>Website(Optional)</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Website\" value={jobInfo.website} onChange={(e) => onChange(\"website\", e.target.value)} />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Descrption</Form.Label>\n                <Form.Control as=\"textarea\" rows={3} value={jobInfo.descrption} onChange={(e) => onChange(\"descrption\", e.target.value)} isInvalid={!descrptionValidate} required />\n                <Form.Control.Feedback type=\"invalid\" validated={false}>\n                    Please input descrption\n                </Form.Control.Feedback>\n            </Form.Group>\n            <Button variant=\"secondary\" type=\"submit\">\n                {\n                    isNew ?\n                        \"Post New Job\"\n                        : \"Edit\"\n                }\n            </Button>\n        </Form>\n    </Card>\n}\n","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\n\nexport default function HeartButton(props) {\n    const { jobId, isLoggedIn } = props;\n    const [favoriteState, setFavoriteState] = useState(undefined);\n\n    useEffect(() => {\n        axios.defaults.withCredentials = true;\n        axios.get('/users/isFavorite/' + jobId)\n            .then((response) => {\n                setFavoriteState(response.data);\n            })\n            .catch(error => console.log(error));\n    }, \"\");\n\n    if (!isLoggedIn) {\n        return <span className=\"heart\" onClick={() => window.location.href = \"../login\"}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-heart\" viewBox=\"0 0 16 16\">\n                <path d=\"m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\" />\n            </svg>\n        </span>\n    }\n\n    if (favoriteState === undefined) {\n        return <React.Fragment />\n    } else {\n        return <span onClick={() => {\n            if (favoriteState === false) {\n                axios.post('/users/addFavorite/' + jobId)\n                    .then(() => {\n                        setFavoriteState(true);\n                    })\n                    .catch(error => console.log(error));\n            } else {\n                axios.post('/users/removeFavorite/' + jobId)\n                    .then(() => {\n                        setFavoriteState(false);\n                    })\n                    .catch(error => console.log(error));\n            }\n\n        }}>\n            {!favoriteState ?\n                <span className=\"heart\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-heart\" viewBox=\"0 0 16 16\">\n                        <path d=\"m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\" />\n                    </svg>\n                </span>\n                :\n                <span className=\"heart-fill\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"red\" class=\"bi bi-heart-fill\" viewBox=\"0 0 16 16\">\n                        <path fill-rule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\" />\n                    </svg>\n                </span>\n            }\n        </span>\n    }\n}","import React from 'react';\nimport { SearchBox, NavBar } from \"../../components\";\nimport './index.css';\n\nexport default function HomePage() {\n\n    return <React.Fragment>\n        <NavBar />\n        <div className=\"search-area\">\n            <div className=\"search-logo-container\">\n                <div className=\"search-logo\" />\n            </div>\n            <div className=\"search-container\">\n                <SearchBox />\n            </div>\n        </div>\n    </React.Fragment >\n\n}","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { NavBar, JobCard } from \"../../components\";\nimport './index.css';\n\nexport default function SearchResultPage() {\n    const { searchQuery } = useParams();\n    const [searchResultState, setSearchResultState] = useState([]);\n\n    useEffect(() => {\n        axios.defaults.withCredentials = true;\n        axios.get('/jobs/findAll/' + searchQuery)\n            .then(response => setSearchResultState(response.data))\n            .catch(error => console.log(error));\n    }, [])\n\n    return <React.Fragment>\n        <NavBar />\n        <div className=\"joblist-area\">\n            {\n                searchResultState.map((item => {\n                    return <JobCard jobInfo={item} showAll={false} showHeartButton={false} isLoggedIn={false} />\n                }))\n            }\n        </div>\n    </React.Fragment >\n\n}","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { NavBar, JobCard } from \"../../components\";\nimport './index.css';\n\n\nexport default function JobDetail() {\n    const { jobId } = useParams();\n    const [jobInfo, setJobInfo] = useState({\n        title: \"\",\n        company: \"\",\n        location: \"\",\n        descrption: \"\",\n        email: \"\",\n        website: \"\",\n        postUser: \"\",\n    });\n    const [username, setUsername] = useState(\"\");\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        axios.defaults.withCredentials = true;\n        axios.get('/jobs/find/' + jobId)\n            .then(response => setJobInfo(response.data[0]))\n            .catch(error => console.log(error));\n    }, []);\n\n    useEffect(() => {\n        axios.defaults.withCredentials = true;\n        axios.get('/users/whoIsLoggedIn/')\n            .then(response => {\n                setUsername(response.data);\n                setIsLoggedIn(true);\n            })\n            .catch(() => setIsLoggedIn(false));\n    }, \"\");\n\n    return <React.Fragment>\n        <NavBar />\n        <div className=\"jobdetail-area\">\n            <JobCard jobInfo={jobInfo} showAll={true} isLoggedIn={isLoggedIn} showHeartButton={true} editable={jobInfo.postUser === username} />\n        </div>\n    </React.Fragment >\n\n}","import React from 'react';\nimport axios from 'axios';\nimport { NavBar, JobEditCard } from \"../../components\";\nimport './index.css';\n\n\nexport default function JobNew() {\n\n    return <React.Fragment>\n        <NavBar />\n        <div className=\"jobcreate-area\">\n            <JobEditCard action={(jobData) => {\n                axios.defaults.withCredentials = true;\n                axios.post('/jobs/create', jobData)\n                    .then(response => {\n                        window.location.href = \"./detail/\" + response.data._id;\n                    })\n                    .catch(error => console.log(error));\n            }} isNew={true}/>\n        </div>\n    </React.Fragment >\n\n}","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { NavBar, JobEditCard } from \"../../components\";\nimport './index.css';\n\n\nexport default function JobEdit() {\n    const { jobId } = useParams();\n    const [jobInfo, setJobInfo] = useState({\n        _id: \"\",\n        title: \"\",\n        company: \"\",\n        location: \"\",\n        descrption: \"\",\n        email: \"\",\n        website: \"\",\n        postUser: \"\",\n    });\n    const [isLoading, setIsLoading] = useState(true);\n    useEffect(() => {\n        axios.defaults.withCredentials = true;\n        axios.get('/jobs/find/' + jobId)\n            .then(response => {\n                setJobInfo(response.data[0]);\n                setIsLoading(false);\n            })\n            .catch(error => console.log(error));\n    }, []);\n\n    return <React.Fragment>\n        <NavBar />\n        <div className=\"jobcreate-area\">\n            {!isLoading && <JobEditCard action={(jobData) => {\n                axios.defaults.withCredentials = true;\n                axios.put('/jobs/edit', jobData)\n                    .then(() => {\n                        window.location.href = \"../detail/\" + jobData._id;\n                    })\n                    .catch(error => console.log(error));\n            }} job={jobInfo} isNew={false} />}\n        </div>\n    </React.Fragment >\n\n}","import axios from 'axios';\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { NavBar } from \"../../components\";\nimport './index.css';\n\nexport default function LoginPage() {\n\n    const [userInfo, setUserInfo] = useState({\n        username: \"\",\n        password: \"\",\n    })\n\n    const [usernameErrorMessage, setUsernameErrorMessage] = useState(\"\");\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState(\"\");\n\n    const onChange = (key, value) => {\n        let newUserInfo = { ...userInfo };\n        newUserInfo[key] = value;\n        setUserInfo(newUserInfo);\n        setUsernameErrorMessage(\"\");\n        setPasswordErrorMessage(\"\");\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        const { username, password } = userInfo;\n        let valid = true;\n        if (username.trim().length === 0) {\n            setUsernameErrorMessage(\"Please input user name\");\n            valid = false;\n        }\n        if (password.trim().length === 0) {\n            setPasswordErrorMessage(\"Please input password\");\n            valid = false;\n        }\n        if (valid) {\n            axios.defaults.withCredentials = true;\n            axios.post('/users/authenticate', userInfo)\n                .then((response) => {\n                    if (response.data === \"Invalid username or password\") {\n                        setPasswordErrorMessage(\"Invalid username or password\");\n                    } else {\n                        window.location.href = \"/\";\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n    };\n\n    return <React.Fragment>\n        <NavBar />\n        <div className=\"login-area\">\n            <Form noValidate onSubmit={handleSubmit}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>User Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter user name\" onChange={(e) => onChange(\"username\", e.target.value)} isInvalid={!!usernameErrorMessage} required />\n                    <Form.Control.Feedback type=\"invalid\">\n                        {usernameErrorMessage}\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter password\" onChange={(e) => onChange(\"password\", e.target.value)} isInvalid={!!passwordErrorMessage} required />\n                    <Form.Control.Feedback type=\"invalid\">\n                        {passwordErrorMessage}\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n                <div className=\"button-wrapper\">\n                    <Button variant=\"secondary\" type=\"submit\">\n                        Login\n                    </Button>\n                </div>\n            </Form>\n        </div>\n    </React.Fragment >\n\n}","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Form, Button } from 'react-bootstrap';\nimport { NavBar } from \"../../components\";\nimport './index.css';\n\nexport default function RegisterPage() {\n\n    const [usernameErrorMessage, setUsernameErrorMessage] = useState(\"\");\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState(\"\");\n    const [passwordRetypeErrorMessage, setPasswordRetypeErrorMessage] = useState(\"\");\n    const [userInfo, setUserInfo] = useState({\n        username: \"\",\n        password: \"\",\n        passwordRetype: \"\",\n    })\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        const { username, password, passwordRetype } = userInfo;\n        let valid = true;\n        if (username.trim().length === 0) {\n            setUsernameErrorMessage(\"Please input user name\");\n            valid = false;\n        }\n        if (password.trim().length === 0) {\n            setPasswordErrorMessage(\"Please input password\");\n            valid = false;\n        }\n        if (passwordRetype.trim().length === 0) {\n            setPasswordRetypeErrorMessage(\"Please retype password\");\n            valid = false;\n        } else if (password.trim().length !== 0 && passwordRetype !== password) {\n            setPasswordRetypeErrorMessage(\"Unmatch password\");\n            valid = false;\n        }\n        if (valid) {\n            axios.defaults.withCredentials = true;\n            axios.post('/users/', userInfo)\n                .then(() => {\n                    window.location.href=\"./\";\n                })\n                .catch((error) => {\n                    setUsernameErrorMessage(\"User already exists\");\n                    console.log(error);\n                });\n        }\n    };\n\n    const onChange = (key, value) => {\n        let newUserInfo = { ...userInfo };\n        newUserInfo[key] = value;\n        setUserInfo(newUserInfo);\n        setPasswordErrorMessage(\"\");\n        setPasswordRetypeErrorMessage(\"\");\n        setUsernameErrorMessage(\"\");\n    };\n\n    return <React.Fragment>\n        <NavBar />\n        <div className=\"register-area\">\n            <Form noValidate onSubmit={handleSubmit}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>User Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter user name\" onChange={(e) => onChange(\"username\", e.target.value)} isInvalid={!!usernameErrorMessage} required />\n                    <Form.Control.Feedback type=\"invalid\">\n                        {usernameErrorMessage}\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => onChange(\"password\", e.target.value)} isInvalid={!!passwordErrorMessage} required />\n                    <Form.Control.Feedback type=\"invalid\">\n                        {passwordErrorMessage}\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Retype Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Retype Password\" onChange={(e) => onChange(\"passwordRetype\", e.target.value)} isInvalid={!!passwordRetypeErrorMessage} required />\n                    <Form.Control.Feedback type=\"invalid\">\n                        {passwordRetypeErrorMessage}\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n\n                <div className=\"button-wrapper\">\n                    <Button variant=\"secondary\" type=\"submit\">\n                        Register\n                    </Button>\n                </div>\n            </Form>\n        </div>\n    </React.Fragment >\n\n}","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { NavBar, JobCard } from \"../../components\";\nimport './index.css';\n\nexport default function FavoritesPage() {\n    const [favoritesState, setfavoritesState] = useState([]);\n\n    useEffect(() => {\n        axios.defaults.withCredentials = true;\n        axios.get('/users/favorites')\n            .then(response => setfavoritesState(response.data))\n            .catch(error => console.log(error));\n    }, [])\n\n    return <React.Fragment>\n        <NavBar />\n        <div className=\"joblist-area\">\n            {\n                favoritesState.map((item => {\n                    return <JobCard jobInfo={item} showAll={false} isLoggedIn={false} showHeartButton={false} />\n                }))\n            }\n        </div>\n    </React.Fragment >\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { HomePage, SearchResultPage, JobDetailPage, JobEditPage, LoginPage, RegisterPage, JobNewPage, FavoritesPage } from \"./pages\";\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/jobSearch/:searchQuery\" element={<SearchResultPage />} />\n      <Route path=\"/detail/:jobId\" element={<JobDetailPage />} />\n      <Route path=\"/new\" element={<JobNewPage />} />\n      <Route path=\"/edit/:jobId\" element={<JobEditPage />} />\n      <Route path=\"/login\" element={<LoginPage />} />\n      <Route path=\"/register\" element={<RegisterPage />} />\n      <Route path=\"/favorites\" element={<FavoritesPage />} />\n    </Routes>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}